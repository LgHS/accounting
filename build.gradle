plugins {
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'java'
    id 'nu.studer.jooq' version '3.0.3'
    id 'org.flywaydb.flyway' version '5.2.4'
}

apply plugin: 'io.spring.dependency-management'

group = 'be.lghs'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
configurations {
    flywayRuntime
}

repositories {
    mavenLocal()
    mavenCentral()
}

springBoot {
    buildInfo()
}

jooq {
    accounting(sourceSets.main) {
//         logging = 'TRACE'
        logging = 'WARN'
        jdbc {
            driver = "${database_driver}"
            url = "${database_url}"
            user = "${database_user}"
            password = "${database_password}"
            schema = "${database_schema}"
        }
        generator {
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                includes = '.*'
                inputSchema = 'accounting'
                // outputSchemaToDefault = true
                schemaVersionProvider = 'SELECT \'accounting_\' || MAX(version) FROM accounting.flyway_schema_history'
            }
            generate {
                deprecated = false
            //     relations = true
            //     records = true
            //     immutablePojos = true
            //     fluentSetters = true
            }
            target {
                packageName = 'be.lghs.accounting.model'
                // should those be committed as sources?
                directory = "${buildDir}/generated/sources/jooq/java"
            }
        }
    }
}

flyway {
    // driver = "${database_driver}"
    url = "${database_url}"
    user = "${database_user}"
    password = "${database_password}"
    schemas = [ "${database_schema}" ]
    configurations = [ 'flywayRuntime' ]
}

task jooq(type: GradleBuild) {
    tasks = ['flywayMigrate', 'generateAccountingJooqSchemaSource']
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    // handlerbars sucks, I'd love rocker back... If only there was an IntelliJ plugin :(
    // implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.1'
    implementation 'com.github.jknack:handlebars:4.1.2' // force newer version
    implementation 'com.github.jknack:handlebars-springmvc:4.1.2' // force newer version
    implementation 'org.apache.commons:commons-lang3:3.9' // missing transitive dependency
    implementation 'org.flywaydb:flyway-core'
    implementation 'be.lghs:coda-parser:0.0.1'

    implementation 'org.jfree:jfreechart:1.5.0'
    implementation 'org.jfree:jfreesvg:3.4'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'
    jooqRuntime 'org.postgresql:postgresql'
    flywayRuntime 'org.postgresql:postgresql'
}
